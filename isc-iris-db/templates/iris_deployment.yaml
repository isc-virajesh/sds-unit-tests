apiVersion: intersystems.com/v1alpha1
kind: IrisCluster
metadata:
  name: {{.Release.Name}}
  namespace: {{.Release.Namespace}}
spec:
  licenseKeySecret:
    name: {{ .Values.requiredSecrets.irisLicense }}
  configSource:
    name: iris-cpf-config-map
  topology:
    data:
      podTemplate:
        metadata:
          labels:
            sds/chart-version: {{ .Chart.AppVersion }}
          annotations:
            pre.hook.backup.velero.io/command: '["/bin/bash", "/home/irisowner/sds-freeze.sh"]'
            post.hook.backup.velero.io/command: '["/bin/bash", "/home/irisowner/sds-thaw.sh"]'
        spec:
          # args:
          #   - --check-caps
          #   - "false"
          imagePullSecrets:
          {{- if .Values.requiredSecrets.intersystemsContainerRegistrySecret }}    
          - name: {{ .Values.requiredSecrets.intersystemsContainerRegistrySecret }}
          {{- end }}
          env:
          - name: CLOUD_PROVIDER
            value: {{ .Values.cloudProvider }}
          - name: CLOUD_PROVIDER_REGION
            value: {{ .Values.cloudProviderRegion }}
          - name: SERVICE_INTERNAL_NAME
            value: {{ .Values.serviceInternalName }}
          {{- if .Values.compute.database.nodeTypeSelector }}
          nodeSelector:
            sds/node-type: {{ .Values.compute.database.nodeTypeSelector }}
          {{- end }}
          resources:
            requests:
              cpu: {{ .Values.compute.database.cpu }}
              memory: {{ .Values.compute.database.memory }}
          tolerations:
          - key: sds/select-worker
            value: select-worker
            effect: NoSchedule

      mirrored: {{.Values.mirrored}}
      {{- if eq .Values.skaffold true }}
      image: {{ .Values.skaffoldImage }}
      {{- else }}
      image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Chart.AppVersion }}
      {{- end }}
      compatibilityVersion: {{ .Values.image.ikoCompatibilityVersion }}

      updateStrategy:
        type: RollingUpdate
      storageDB:
        resources:
          requests:
            storage: {{.Values.storageDB.size}}
        storageClassName: {{.Values.storageDB.storageClass}}
      storageWIJ:
        resources:
          requests:
            storage: {{.Values.storageWIJ.size}}
        storageClassName: {{.Values.storageWIJ.storageClass}}
      storageJournal1:
        resources:
          requests:
            storage: {{.Values.storageJournal1.size}}
        storageClassName: {{.Values.storageJournal1.storageClass}}
      storageJournal2:
        resources:
          requests:
            storage: {{.Values.storageJournal2.size}}
        storageClassName: {{.Values.storageJournal2.storageClass}}
    webgateway:
      replicas: 1
      image: containers.intersystems.com/intersystems/webgateway:2023.1.0.229.0
      podTemplate:
        spec:
          imagePullSecrets:
          {{- if .Values.requiredSecrets.intersystemsContainerRegistrySecret }}    
          - name: {{ .Values.requiredSecrets.intersystemsContainerRegistrySecret }}
          {{- end }}
          {{- if .Values.compute.database.nodeTypeSelector }}
          nodeSelector:
            sds/node-type: {{ .Values.compute.database.nodeTypeSelector }}
          {{- end }}
          tolerations:
          - key: sds/select-worker
            value: select-worker
            effect: NoSchedule
      applicationPaths:
        #; All of the IRIS instance's system default applications.
        #; For Management Portal only, just use '/csp/sys'.
        #; To support other applications, please add them to this list.
        - /csp/sys
        - /csp/broker
        - /api
        - /isc
        - /oauth2
        - /ui
      updateStrategy:
        type: RollingUpdate
  serviceTemplate:
      spec:
        type: ClusterIP